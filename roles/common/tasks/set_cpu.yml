# common/tasks/set_cpu.yml
- name: Disable cstate in grub default
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX=$GRUB_CMDLINE_LINUX" processor.max_cstate=1 intel_idle.max_cstate=0"'
    state: present
  register: cstate_result
  notify:
    - Check grub config
    - Check cstate on grub.cfg

- name: Install cpuwer tools
  ansible.builtin.package:
    name: linux-tools-generic
    state: present

- name: Check supported cpufreq governors
  ansible.builtin.command: 'grep {{ common_cpu_governor }} /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors'
  args:
    removes:  /sys/devices/system/cpu/cpu-1/cpufreq/scaling_available_governors
  register: is_governor_supported
  failed_when: is_governor_supported.rc == 1


- name: Set cpu governor 1way
  ansible.builtin.command: > 
    cpupower frequency-set -g {{ common_cpu_governor}}
  register: governor
  when: is_governor_supported.rc == 0
  failed_when: governor != 0
  ignore_errors: true

- name: Set cpu to governor 2way
  ansible.builtin.shell: >
    echo performance | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
  when: is_governor_supported.rc == 0
  args: 
    removes:  /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors
  ignore_errors: true

- name: Check current cpu governor
  ansible.builtin.shell: > 
    cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor | uniq | grep {{ common_cpu_governor}}
  register: common_cpu_governor_true
  failed_when: common_cpu_governor_true.rc == 0